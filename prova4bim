#include <stdio.h>
#include <string.h>

// Estruturas
struct Contato {
    char nome[50];
    char telefone[20];
};

struct Mensagem {
    char destinatario[50];
    char conteudo[200];
};

struct Ligacao {
    char destinatario[50];
    int duracao; // em segundos
};

// Variáveis globais
int bateria = 100;            // Percentual da bateria
int creditos = 10;            // Créditos iniciais
struct Contato agenda[10];    // Lista de contatos (até 10)
struct Mensagem mensagens[5]; // Lista de mensagens (até 5)
struct Ligacao historico[5];  // Histórico de ligações (até 5)
int num_contatos = 0, num_mensagens = 0, num_ligacoes = 0;

// Funções auxiliares
void reduzir_bateria() {
    if (bateria > 0) {
        bateria--;
    }
}

// Funções principais
void ver_bateria() {
    printf("\nNivel de bateria: %d%%\n", bateria);
    int tempo_restante = bateria * 5; // Supondo que cada 1% dura 5 minutos
    printf("Previsao de duracao: %d minutos\n", tempo_restante);
}

void ver_mensagens() {
    if (num_mensagens == 0) {
        printf("\nNao ha mensagens.\n");
    } else {
        for (int i = 0; i < num_mensagens; i++) {
            printf("\nMensagem %d:\n", i + 1);
            printf("Destinatario: %s\n", mensagens[i].destinatario);
            printf("Conteudo: %s\n", mensagens[i].conteudo);
        }
    }
}

void ver_historico_ligacoes() {
    if (num_ligacoes == 0) {
        printf("\nNao ha historico de ligacoes.\n");
    } else {
        for (int i = 0; i < num_ligacoes; i++) {
            printf("\nLigacao %d:\n", i + 1);
            printf("Destinatario: %s\n", historico[i].destinatario);
            printf("Duracao: %d segundos\n", historico[i].duracao);
        }
    }
}

void adicionar_contato() {
    if (num_contatos >= 10) {
        printf("\nAgenda cheia.\n");
        return;
    }
    printf("\nDigite o nome do contato: ");
    scanf(" %[^\n]s", agenda[num_contatos].nome);
    printf("Digite o telefone do contato: ");
    scanf(" %[^\n]s", agenda[num_contatos].telefone);
    num_contatos++;
    printf("\nContato adicionado com sucesso!\n");
}

void ver_agenda() {
    if (num_contatos == 0) {
        printf("\nNao ha contatos salvos.\n");
    } else {
        printf("\n===== Agenda =====\n");
        for (int i = 0; i < num_contatos; i++) {
            printf("%d. %s - %s\n", i + 1, agenda[i].nome, agenda[i].telefone);
        }
    }
    printf("\n1. Adicionar Contato\n");
    printf("2. Voltar ao Menu\n");
    int opcao;
    scanf("%d", &opcao);
    if (opcao == 1) {
        adicionar_contato();
    }
}

void realizar_ligacao() {
    int opcao;

    while (1) {
        printf("\n===== Realizar Ligacao =====\n");
        printf("1. Ligar para a Policia\n");
        printf("2. Ligar para os Bombeiros\n");
        printf("3. Ligar para o SAMU\n");
        printf("4. Contatos Salvos\n");
        printf("5. Voltar ao Menu\n");
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                printf("\nLigando para a Policia...\n");
                reduzir_bateria();
                creditos -= 2;
                printf("Ligacao concluida (5 segundos).\n");
                break;

            case 2:
                printf("\nLigando para os Bombeiros...\n");
                reduzir_bateria();
                creditos -= 2;
                printf("Ligacao concluida (5 segundos).\n");
                break;

            case 3:
                printf("\nLigando para o SAMU...\n");
                reduzir_bateria();
                creditos -= 2;
                printf("Ligacao concluida (5 segundos).\n");
                break;

            case 4:
                if (num_contatos == 0) {
                    printf("\nNao ha contatos salvos. Adicione contatos na agenda.\n");
                } else {
                    printf("\n===== Contatos Salvos =====\n");
                    for (int i = 0; i < num_contatos; i++) {
                        printf("%d. %s\n", i + 1, agenda[i].nome);
                    }
                    printf("Escolha um contato para ligar: ");
                    int escolha;
                    scanf("%d", &escolha);
                    if (escolha >= 1 && escolha <= num_contatos) {
                        printf("\nLigando para %s...\n", agenda[escolha - 1].nome);
                        reduzir_bateria();
                        creditos -= 2;
                        printf("Ligacao concluida (5 segundos).\n");
                    } else {
                        printf("\nOpcao invalida.\n");
                    }
                }
                break;

            case 5:
                return;

            default:
                printf("\nOpcao invalida.\n");
        }
    }
}

void ver_creditos() {
    printf("\nCreditos: %d reais\n", creditos);
    printf("Voce pode realizar %d ligacoes ou enviar %d mensagens.\n", creditos / 2, creditos);
}

void ver_operadora() {
    printf("\nOperadora: Claro\n");
}

void menu_inicial() {
    printf("\n===== Menu Inicial =====\n");
    printf("1. Ver Nivel de Bateria\n");
    printf("2. Mensagens\n");
    printf("3. Historico de Ligacoes\n");
    printf("4. Agenda\n");
    printf("5. Creditos\n");
    printf("6. Operadora\n");
    printf("7. Realizar Ligacao\n");
    printf("8. Sair\n");
}

int main() {
    int opcao;
    while (1) {
        menu_inicial();
        printf("Escolha uma opcao: ");
        scanf("%d", &opcao);

        switch (opcao) {
            case 1:
                ver_bateria();
                break;
            case 2:
                ver_mensagens();
                break;
            case 3:
                ver_historico_ligacoes();
                break;
            case 4:
                ver_agenda();
                break;
            case 5:
                ver_creditos();
                break;
            case 6:
                ver_operadora();
                break;
            case 7:
                realizar_ligacao();
                break;
            case 8:
                printf("\nSaindo...\n");
                return 0;
            default:
                printf("\nOpcao invalida.\n");
        }
    }
    return 0;
}
